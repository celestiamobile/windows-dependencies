jobs:
- job: "Main"
  timeoutInMinutes: 120
  pool:
    vmImage: windows-2025

  variables:
    arch: ${{ parameters.arch }}

  steps:
  - checkout: vcpkg
    path: vcpkg
    fetchDepth: 0

  - script: |
      git checkout origin/celestia
    displayName: 'Checkout Branch'
    workingDirectory: $(Agent.BuildDirectory)/vcpkg

  - script: |
      .\bootstrap-vcpkg.bat
    displayName: 'Bootstrap'
    workingDirectory: $(Agent.BuildDirectory)/vcpkg

  - script: |
      set VCPKG_BINARY_SOURCES=clear
      if "$(arch)" == "x64" (
        .\vcpkg --triplet=$(arch)-windows install --recurse --binarysource=clear libepoxy libpng libjpeg-turbo gettext luajit fmt eigen3 freetype[core] cspice libzip[core] meshoptimizer miniaudio boost-container boost-smart-ptr sentry-native
      ) else (
        .\vcpkg --triplet=$(arch)-windows install --recurse --binarysource=clear libepoxy libpng libjpeg-turbo gettext luajit fmt eigen3 freetype[core] cspice libzip[core] meshoptimizer miniaudio boost-container boost-smart-ptr
      )
    displayName: 'Build (Windows)'
    workingDirectory: $(Agent.BuildDirectory)/vcpkg

  - script: |
      if "$(arch)" == "x64" (
        .\vcpkg export --triplet=$(arch)-windows --nuget --nuget-version=$(VERSION) --nuget-id=celestia-windows-$(arch)-dependencies libepoxy libpng libjpeg-turbo gettext luajit fmt eigen3 freetype cspice libzip  meshoptimizer miniaudio boost-container boost-smart-ptr sentry-native
      ) else (
        .\vcpkg export --triplet=$(arch)-windows --nuget --nuget-version=$(VERSION) --nuget-id=celestia-windows-$(arch)-dependencies libepoxy libpng libjpeg-turbo gettext luajit fmt eigen3 freetype cspice libzip  meshoptimizer miniaudio boost-container boost-smart-ptr
      )
    displayName: 'Export (Windows)'
    workingDirectory: $(Agent.BuildDirectory)/vcpkg

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)/vcpkg/celestia-windows-$(arch)-dependencies.$(VERSION).nupkg'
      ArtifactName: 'windows-$(arch)'
      publishLocation: 'Container'
    displayName: 'Publish Artifacts'

  - task: NuGetCommand@2
    displayName: 'Publish Package'
    inputs:
      command: 'push'
      packagesToPush: '$(Agent.BuildDirectory)/vcpkg/celestia-windows-$(arch)-dependencies.$(VERSION).nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '9f9dcde1-dcba-4537-8214-71c8a03b99a0/14bb1031-e6b2-40ac-b287-73e7fcb5900e'
    condition: ne( variables['VERSION'], '' )
